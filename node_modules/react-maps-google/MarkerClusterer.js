"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactLoadScript = _interopRequireDefault(require("react-load-script"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var MarkerClusterer = /*#__PURE__*/function (_Component) {
  _inheritsLoose(MarkerClusterer, _Component);

  function MarkerClusterer(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      scriptLoaded: false
    };
    _this.onScriptLoad = _this.onScriptLoad.bind(_assertThisInitialized(_this));
    return _this;
  }

  var _proto = MarkerClusterer.prototype;

  _proto.componentDidUpdate = function componentDidUpdate() {
    this.renderMarkerClusterer(this.props);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (!this.markerClusterer) {
      return;
    }

    this.markerClusterer.clearMarkers();
  };

  _proto.onScriptLoad = function onScriptLoad() {
    this.setState({
      scriptLoaded: true
    });
    this.renderMarkerClusterer(this.props);
  };

  _proto.renderMarkerClusterer = function renderMarkerClusterer(props) {
    var map = props.map,
        markers = props.markers;

    if (!map) {
      return;
    }

    if (!this.markerClusterer) {
      this.markerClusterer = new MarkerClusterer(map, markers);
      return;
    }
    /**
     * @todo Review props and apply updates to this.markerClusterer. - Ryan
     */

  };

  _proto.render = function render() {
    return /*#__PURE__*/_react["default"].createElement(_reactLoadScript["default"], {
      url: "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js",
      onLoad: this.onScriptLoad
    });
  };

  return MarkerClusterer;
}(_react.Component);

MarkerClusterer.propTypes = {
  map: _propTypes["default"].object,
  markers: _propTypes["default"].array,
  options: _propTypes["default"].object,
  onReady: _propTypes["default"].func
};
MarkerClusterer.defaultProps = {
  markers: [],
  options: {},
  onReady: function onReady(markerClusterer) {}
};
var _default = MarkerClusterer;
exports["default"] = _default;